generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projects {
  id        String   @id @default(cuid())
  name      String
  teams     Teams[]  @relation("ProjectTeams")
  time      DateTime
  status    String
  tasks     Tasks[]  @relation("ProjectTasks")
  createdAt DateTime @default(now())
}

model Tasks {
  id        String   @id @default(cuid())
  name      String
  projectId String
  project   Projects @relation("ProjectTasks", fields: [projectId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Teams {
  id        String     @id @default(cuid())
  teamName  String
  users     User[]     @relation("UserTeams")
  projects  Projects[] @relation("ProjectTeams")
  createdAt DateTime   @default(now())
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  role          String    @default("user")
  createdAt     DateTime
  updatedAt     DateTime
  sessions      Session[]
  accounts      Account[]
  teams         Teams[]   @relation("UserTeams")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @default(cuid())
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id @default(cuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
